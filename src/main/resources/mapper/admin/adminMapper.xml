<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jscd.app.mapper.adminMapper">


    <!--  회원정보관리에서 관리자로 등급 업데이트 시, 관리자 테이블에 insert -->
    <insert id="insertAdmin" parameterType="AdminDto">
        insert into admin
            (id, name, pwd,grade)
        values (#{id}, #{name}, #{pwd},#{grade})
    </insert>

    <!--   최고관리자 수-->
    <select id="countAdmin" resultType="int">
        select count(*)
        from admin
        where grade = '1'
    </select>

    <!--   조교 수-->
    <select id="countAssistant" resultType="int">
        select count(*)
        from admin
        where grade = '2'
    </select>

    <!--    select 쿼리문-->
    <sql id="selectAdmin">
        select id,
               name,
               nickname,
               birth,
               pwd,
               phone,
               status,
               grade,
               regDate
        from admin
    </sql>

    <!--    select : 로그인 시, 관리자 정보 확인-->
    <select id="selectAdmin" parameterType="String" resultType="AdminDto">
        <include refid="selectAdmin"/>
        where id = #{id}
    </select>

    <!--    selectAll : 관리자 전체 정보 관리-->
    <select id="selectAllAdmin" resultType="AdminDto">
        <include refid="selectAdmin"/>
        order by name
    </select>

    <!--    update : 관리자 정보 수정-->
    <update id="updateAdmin" parameterType="AdminDto">
        update admin
        set nickname   = #{nickname},
            pwd = #{pwd},
            birth      = #{birth},
            phone      = #{phone},
            modifyDate = now()
        where id = #{id}
    </update>

    <!--    delete : 정보 삭제-->
    <delete id="deleteAdmin" parameterType="String">
        delete
        from admin
        where id = #{id}
    </delete>

    <!--    deleteAll : 전체 삭제-->
    <delete id="deleteAllAdmin">
        delete
        from admin
    </delete>

    <!--대시보드-->
<!--    1.회원현황 - 전체 회원 수, 일반 회원 수(1), 학생 수(2), 강사 수(3), 관리자 수(4)-->
    <select id="countMemberStatus" resultType="DashboardDto">
        SELECT
            SUM(CASE WHEN grade = '1' THEN 1 ELSE 0 END) AS memberCnt,
            SUM(CASE WHEN grade = '2' THEN 1 ELSE 0 END) AS studentCnt,
            SUM(CASE WHEN grade = '3' THEN 1 ELSE 0 END) AS teacherCnt,
            SUM(CASE WHEN grade = '4' THEN 1 ELSE 0 END) AS ManagerCnt,
            SUM(CASE WHEN grade = '5' THEN 1 ELSE 0 END) AS firstManagerCnt,
            COUNT(*) AS memberTotalCnt
        FROM member;
    </select>
<!--    2.학원매출 - 부트캠프 매출, 세미나 매출-->
    <select id="totalSalesStatus" resultType="DashboardDto">
        SELECT
        SUM(CASE WHEN payDay = CURDATE() - INTERVAL 7 Day THEN lastPrice END) AS 'price7day',
        SUM(CASE WHEN payDay = CURDATE() - INTERVAL 6 Day THEN lastPrice END) AS 'price6day',
        SUM(CASE WHEN payDay = CURDATE() - INTERVAL 5 Day THEN lastPrice END) AS 'price5day',
        SUM(CASE WHEN payDay = CURDATE() - INTERVAL 4 Day THEN lastPrice END) AS 'price4day',
        SUM(CASE WHEN payDay = CURDATE() - INTERVAL 3 Day THEN lastPrice END) AS 'price3day',
        SUM(CASE WHEN payDay = CURDATE() - INTERVAL 2 Day THEN lastPrice END) AS 'price2day',
        SUM(CASE WHEN payDay = CURDATE() - INTERVAL 1 Day THEN lastPrice END) AS 'price1day',
        SUM(CASE WHEN payDay = CURDATE() THEN lastPrice END) AS 'priceToday'
        FROM payhty
        WHERE payDay >= CURDATE() - INTERVAL 7 DAY AND payDay  &lt;= CURDATE()
    </select>
<!--    3.강의현황 - 진행 중 부트캠프, 진행 예정 부트캠프, 진행 중 세미나, 진행 예정 세미나, 종료 강의-->
    <select id="lstRegistStatus" resultType="DashboardDto">
        SELECT
            SUM(CASE WHEN status = '진행 중' AND courseCode=1 THEN 1 ELSE 0 END) AS btProceedingCnt,
            SUM(CASE WHEN status = '진행예정' AND courseCode=1 THEN 1 ELSE 0 END) AS btExpectedCnt,
            SUM(CASE WHEN status = '종료' AND courseCode=1 THEN 1 ELSE 0 END) AS btEndCnt,
            SUM(CASE WHEN courseCode=1 THEN 1 ELSE 0 END) AS btTotalCnt,
            SUM(CASE WHEN status = '진행 중' AND courseCode != 1 THEN 1 ELSE 0 END) AS smProceedingCnt,
            SUM(CASE WHEN status = '진행예정' AND courseCode != 1 THEN 1 ELSE 0 END) AS smExpectedCnt,
            SUM(CASE WHEN status = '종료' AND courseCode != 1 THEN 1 ELSE 0 END) AS smEndCnt,
            SUM(CASE WHEN courseCode != 1 THEN 1 ELSE 0 END) AS smTotalCnt
        FROM lstregist;
    </select>
<!--    4.qna(전체) 게시글 카테고리 분류 - 부트캠프 게시글 수, 세미나 게시글 수, 결제 및 환불 게시글 수, 사이트 이용 게시글 수, 학원 관련 게시글 수, 기타 게시글 수-->
    <select id="qnaCategoryStatus" resultType="DashboardDto">
        SELECT
            SUM(CASE WHEN ctName = '부트캠프' THEN 1 ELSE 0 END) AS qnaBtCnt,
            SUM(CASE WHEN ctName = '세미나' THEN 1 ELSE 0 END) AS qnaSmCnt,
            SUM(CASE WHEN ctName = '결제 및 환불' THEN 1 ELSE 0 END) AS qnaPayRefCnt,
            SUM(CASE WHEN ctName = '사이트 이용' THEN 1 ELSE 0 END) AS qnaSiteUseCnt,
            SUM(CASE WHEN ctName = '학원관련' THEN 1 ELSE 0 END) AS qnaAcademyCnt,
            SUM(CASE WHEN ctName = '기타' THEN 1 ELSE 0 END) AS qnaEtcCnt,
            COUNT(*) AS qnaTotalCnt
        FROM allqna;
    </select>


</mapper>
