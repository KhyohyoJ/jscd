<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jscd.app.lecture.lstRegist.lstRegistMapper">
<!--       전체 게시물 개수-->
       <select id="count" resultType="int">
              select count(*)
              from lstRegist
       </select>

<!--      강의 등록하기 -->
       <insert id="insert" parameterType="lstRegistDto">
              insert into lstRegist (title, discription, <!-- courseCode--> onOff, status,
                                     minNum, maxNum, location, startDate, endDate, startTime, endTime,
                                     name, book, material, price, discount, lstPrice,
                                     content, attachedFile)
              values (#{title}, #{discription}, <!--#{courseCode},--> #{onOff}, #{status},
                      #{minNum}, #{maxNum}, #{location}, #{startDate}, #{endDate}, #{startTime}, #{endTime},
                      #{name}, #{book}, #{material}, #{price}, #{discount}, #{lstPrice},
                      #{content}, #{attachedFile})
       </insert>

    <!--       강의 조회하기-->
    <select id="selectAll" resultType="lstRegistDto">
        <include refid="selectFromlstRegist"/>
        order by regdate desc, registCode desc
    </select>

    <!--       강의 세부 사항 조회하기-->
    <select id="select" parameterType="int" resultType="lstRegistDto">
        <include refid="selectFromlstRegist"/>
        where registCode = #{registCode}
    </select>

    <!--    등록된 강의 수정하기-->
    <update id="update" parameterType="lstRegistDto">
        update lstRegist
        set title = #{title}, discription = #{discription}, <!--courseCode = #{}--> onOff = #{onOff}, status = #{status},
            minNum = #{minNum}, maxNum = #{maxNum}, startDate = #{startDate}, endDate = #{endDate}, startTime = #{startTime}, endTime = #{endTime},
            name = #{name}, book = #{book}, material = #{material}, price = #{price}, discount = #{discount}, lstPrice = #{lstPrice},
            content = #{content}, attachedFile = #{attachedFile}, etc = #{etc}
        where registCode = #{registCode}
    </update>

    <!--    전체 강의 삭제-->
    <delete id="deleteAll">
        delete from lstRegist
    </delete>

    <!--    강의 삭제하기-->
    <delete id="delete" parameterType="map">
        delete from lstRegist
        where registCode = #{registCode}
    </delete>

    <!--       부트캠프 이름 조회하기-->
       <sql id="selectCourseName">
              SELECT
                     lr.*,
                     c.courseName,
                     ce.className,
                     ce.discount '회차별 할인율',
                      ce.price '회차별 가등'
              FROM
                     jungsukCoding.lstRegist lr
                            JOIN
                     jungsukCoding.classEnroll ce ON lr.courseCode = ce.courseCode
                            JOIN
                     jungsukCoding.course c ON lr.courseCode = c.courseCode
       </sql>

<!--       등록된 강의 조회하기-->
       <sql id="selectFromlstRegist">
              select *
              from lstRegist
       </sql>
</mapper>